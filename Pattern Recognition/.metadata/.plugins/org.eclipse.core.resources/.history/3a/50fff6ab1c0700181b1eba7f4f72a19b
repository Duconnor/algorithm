import java.util.Arrays;

public class FastCollinearPoints {

	private LineSegment[] segments;

	// finds all line segments containing 4 or more points
	public FastCollinearPoints(Point[] points) {
		if (points == null)
			throw new IllegalArgumentException("Illegal Argument");
		for (int i = 0; i < points.length; i++)
			if (points[i] == null)
				throw new IllegalArgumentException("Illegal Argument");

		LineSegment[] tempsegments = new LineSegment[points.length];
		int number = 0;
		for (int i = 0; i < points.length; i++) {
			Point[] temppoints = points;
			Arrays.sort(temppoints, points[i].slopeOrder());
			int count = 0, j = 1;
			double slope1 = 0, slope2 = 0;
			for (; j < temppoints.length; j++) {
				if (count == 0) {
					slope1 = temppoints[j].slopeTo(points[i]);
					count++;
					continue;
				}
				slope2 = temppoints[j].slopeTo(points[i]);
				if (slope1 == slope2)
					count++;
				else {
					if (count < 3) {
						j--;
						count = 0;
					} else {
						Arrays.sort(temppoints, j - count - 1, j);
						LineSegment line = new LineSegment(temppoints[j - count], temppoints[j - 1]);
						segments[number] = line;
						number++;
						count = 0;
						j--;
					}
				}
			}
		}
		segments = new LineSegment[tempsegments.length];
		for(int i=0;i<tempsegments.length;i++) 
			segments[i] = tempsegments[i];
	}

	// the number of line segments
	public int numberOfSegments() {
		return segments.length;
	}

	// the line segments
	public LineSegment[] segments() {
		return segments;
	}

}
